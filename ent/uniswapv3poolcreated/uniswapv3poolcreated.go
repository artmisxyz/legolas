// Code generated by entc, DO NOT EDIT.

package uniswapv3poolcreated

const (
	// Label holds the string label denoting the uniswapv3poolcreated type in the database.
	Label = "uniswap_v3pool_created"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldToken0 holds the string denoting the token0 field in the database.
	FieldToken0 = "token0"
	// FieldToken1 holds the string denoting the token1 field in the database.
	FieldToken1 = "token1"
	// FieldFee holds the string denoting the fee field in the database.
	FieldFee = "fee"
	// FieldTickSpacing holds the string denoting the tick_spacing field in the database.
	FieldTickSpacing = "tick_spacing"
	// FieldPool holds the string denoting the pool field in the database.
	FieldPool = "pool"
	// EdgeEvent holds the string denoting the event edge name in mutations.
	EdgeEvent = "event"
	// Table holds the table name of the uniswapv3poolcreated in the database.
	Table = "uniswap_v3pool_createds"
	// EventTable is the table that holds the event relation/edge.
	EventTable = "uniswap_v3pool_createds"
	// EventInverseTable is the table name for the Event entity.
	// It exists in this package in order to avoid circular dependency with the "event" package.
	EventInverseTable = "events"
	// EventColumn is the table column denoting the event relation/edge.
	EventColumn = "event_pool_created"
)

// Columns holds all SQL columns for uniswapv3poolcreated fields.
var Columns = []string{
	FieldID,
	FieldToken0,
	FieldToken1,
	FieldFee,
	FieldTickSpacing,
	FieldPool,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "uniswap_v3pool_createds"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"event_pool_created",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// Token0Validator is a validator for the "token0" field. It is called by the builders before save.
	Token0Validator func(string) error
	// Token1Validator is a validator for the "token1" field. It is called by the builders before save.
	Token1Validator func(string) error
	// PoolValidator is a validator for the "pool" field. It is called by the builders before save.
	PoolValidator func(string) error
)
