// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// EventsColumns holds the columns for the "events" table.
	EventsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "signature", Type: field.TypeString},
		{Name: "address", Type: field.TypeString},
		{Name: "block_number", Type: field.TypeUint64},
		{Name: "tx_hash", Type: field.TypeString},
		{Name: "tx_index", Type: field.TypeUint},
		{Name: "block_hash", Type: field.TypeString},
		{Name: "index", Type: field.TypeUint},
	}
	// EventsTable holds the schema information for the "events" table.
	EventsTable = &schema.Table{
		Name:       "events",
		Columns:    EventsColumns,
		PrimaryKey: []*schema.Column{EventsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "event_address",
				Unique:  false,
				Columns: []*schema.Column{EventsColumns[3]},
			},
			{
				Name:    "event_index_tx_hash",
				Unique:  true,
				Columns: []*schema.Column{EventsColumns[8], EventsColumns[5]},
			},
		},
	}
	// UniswapV3collectsColumns holds the columns for the "uniswap_v3collects" table.
	UniswapV3collectsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "token_id", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "recipient", Type: field.TypeString},
		{Name: "amount0", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "amount1", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "event_id", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// UniswapV3collectsTable holds the schema information for the "uniswap_v3collects" table.
	UniswapV3collectsTable = &schema.Table{
		Name:       "uniswap_v3collects",
		Columns:    UniswapV3collectsColumns,
		PrimaryKey: []*schema.Column{UniswapV3collectsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "uniswap_v3collects_events_collect",
				Columns:    []*schema.Column{UniswapV3collectsColumns[5]},
				RefColumns: []*schema.Column{EventsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UniswapV3decreaseLiquditiesColumns holds the columns for the "uniswap_v3decrease_liqudities" table.
	UniswapV3decreaseLiquditiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "token_id", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "liquidity", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "amount0", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "amount1", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "event_id", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// UniswapV3decreaseLiquditiesTable holds the schema information for the "uniswap_v3decrease_liqudities" table.
	UniswapV3decreaseLiquditiesTable = &schema.Table{
		Name:       "uniswap_v3decrease_liqudities",
		Columns:    UniswapV3decreaseLiquditiesColumns,
		PrimaryKey: []*schema.Column{UniswapV3decreaseLiquditiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "uniswap_v3decrease_liqudities_events_decrease_liquidity",
				Columns:    []*schema.Column{UniswapV3decreaseLiquditiesColumns[5]},
				RefColumns: []*schema.Column{EventsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UniswapV3increaseLiquditiesColumns holds the columns for the "uniswap_v3increase_liqudities" table.
	UniswapV3increaseLiquditiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "token_id", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "liquidity", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "amount0", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "amount1", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "event_id", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// UniswapV3increaseLiquditiesTable holds the schema information for the "uniswap_v3increase_liqudities" table.
	UniswapV3increaseLiquditiesTable = &schema.Table{
		Name:       "uniswap_v3increase_liqudities",
		Columns:    UniswapV3increaseLiquditiesColumns,
		PrimaryKey: []*schema.Column{UniswapV3increaseLiquditiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "uniswap_v3increase_liqudities_events_increase_liquidity",
				Columns:    []*schema.Column{UniswapV3increaseLiquditiesColumns[5]},
				RefColumns: []*schema.Column{EventsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UniswapV3poolBurnsColumns holds the columns for the "uniswap_v3pool_burns" table.
	UniswapV3poolBurnsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "owner", Type: field.TypeString},
		{Name: "tick_lower", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "tick_upper", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "amount", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "amount0", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "amount1", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "event_id", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// UniswapV3poolBurnsTable holds the schema information for the "uniswap_v3pool_burns" table.
	UniswapV3poolBurnsTable = &schema.Table{
		Name:       "uniswap_v3pool_burns",
		Columns:    UniswapV3poolBurnsColumns,
		PrimaryKey: []*schema.Column{UniswapV3poolBurnsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "uniswap_v3pool_burns_events_pool_burn",
				Columns:    []*schema.Column{UniswapV3poolBurnsColumns[7]},
				RefColumns: []*schema.Column{EventsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UniswapV3poolCreatedsColumns holds the columns for the "uniswap_v3pool_createds" table.
	UniswapV3poolCreatedsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "token0", Type: field.TypeString},
		{Name: "token1", Type: field.TypeString},
		{Name: "fee", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "tick_spacing", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "pool", Type: field.TypeString, Unique: true},
		{Name: "event_id", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// UniswapV3poolCreatedsTable holds the schema information for the "uniswap_v3pool_createds" table.
	UniswapV3poolCreatedsTable = &schema.Table{
		Name:       "uniswap_v3pool_createds",
		Columns:    UniswapV3poolCreatedsColumns,
		PrimaryKey: []*schema.Column{UniswapV3poolCreatedsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "uniswap_v3pool_createds_events_pool_created",
				Columns:    []*schema.Column{UniswapV3poolCreatedsColumns[6]},
				RefColumns: []*schema.Column{EventsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UniswapV3poolFlashesColumns holds the columns for the "uniswap_v3pool_flashes" table.
	UniswapV3poolFlashesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "sender", Type: field.TypeString},
		{Name: "recipient", Type: field.TypeString},
		{Name: "amount0", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "amount1", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "paid0", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "paid1", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "event_id", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// UniswapV3poolFlashesTable holds the schema information for the "uniswap_v3pool_flashes" table.
	UniswapV3poolFlashesTable = &schema.Table{
		Name:       "uniswap_v3pool_flashes",
		Columns:    UniswapV3poolFlashesColumns,
		PrimaryKey: []*schema.Column{UniswapV3poolFlashesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "uniswap_v3pool_flashes_events_pool_flash",
				Columns:    []*schema.Column{UniswapV3poolFlashesColumns[7]},
				RefColumns: []*schema.Column{EventsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UniswapV3poolInitializesColumns holds the columns for the "uniswap_v3pool_initializes" table.
	UniswapV3poolInitializesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "sqrt_price_x96", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "tick", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "event_id", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// UniswapV3poolInitializesTable holds the schema information for the "uniswap_v3pool_initializes" table.
	UniswapV3poolInitializesTable = &schema.Table{
		Name:       "uniswap_v3pool_initializes",
		Columns:    UniswapV3poolInitializesColumns,
		PrimaryKey: []*schema.Column{UniswapV3poolInitializesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "uniswap_v3pool_initializes_events_pool_initialize",
				Columns:    []*schema.Column{UniswapV3poolInitializesColumns[3]},
				RefColumns: []*schema.Column{EventsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UniswapV3poolMintsColumns holds the columns for the "uniswap_v3pool_mints" table.
	UniswapV3poolMintsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "owner", Type: field.TypeString},
		{Name: "tick_lower", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "tick_upper", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "amount", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "amount0", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "amount1", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "event_id", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// UniswapV3poolMintsTable holds the schema information for the "uniswap_v3pool_mints" table.
	UniswapV3poolMintsTable = &schema.Table{
		Name:       "uniswap_v3pool_mints",
		Columns:    UniswapV3poolMintsColumns,
		PrimaryKey: []*schema.Column{UniswapV3poolMintsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "uniswap_v3pool_mints_events_pool_mint",
				Columns:    []*schema.Column{UniswapV3poolMintsColumns[7]},
				RefColumns: []*schema.Column{EventsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UniswapV3poolSwapsColumns holds the columns for the "uniswap_v3pool_swaps" table.
	UniswapV3poolSwapsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "sender", Type: field.TypeString},
		{Name: "recipient", Type: field.TypeString},
		{Name: "amount0", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "amount1", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "sqrt_price_x96", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "liquidity", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "tick", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "event_id", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// UniswapV3poolSwapsTable holds the schema information for the "uniswap_v3pool_swaps" table.
	UniswapV3poolSwapsTable = &schema.Table{
		Name:       "uniswap_v3pool_swaps",
		Columns:    UniswapV3poolSwapsColumns,
		PrimaryKey: []*schema.Column{UniswapV3poolSwapsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "uniswap_v3pool_swaps_events_pool_swap",
				Columns:    []*schema.Column{UniswapV3poolSwapsColumns[8]},
				RefColumns: []*schema.Column{EventsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UniswapV3transfersColumns holds the columns for the "uniswap_v3transfers" table.
	UniswapV3transfersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "token_id", Type: field.TypeString, SchemaType: map[string]string{"postgres": "bigint", "sqlite3": "integer"}},
		{Name: "from", Type: field.TypeString},
		{Name: "to", Type: field.TypeString},
		{Name: "event_id", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// UniswapV3transfersTable holds the schema information for the "uniswap_v3transfers" table.
	UniswapV3transfersTable = &schema.Table{
		Name:       "uniswap_v3transfers",
		Columns:    UniswapV3transfersColumns,
		PrimaryKey: []*schema.Column{UniswapV3transfersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "uniswap_v3transfers_events_transfer",
				Columns:    []*schema.Column{UniswapV3transfersColumns[4]},
				RefColumns: []*schema.Column{EventsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		EventsTable,
		UniswapV3collectsTable,
		UniswapV3decreaseLiquditiesTable,
		UniswapV3increaseLiquditiesTable,
		UniswapV3poolBurnsTable,
		UniswapV3poolCreatedsTable,
		UniswapV3poolFlashesTable,
		UniswapV3poolInitializesTable,
		UniswapV3poolMintsTable,
		UniswapV3poolSwapsTable,
		UniswapV3transfersTable,
	}
)

func init() {
	UniswapV3collectsTable.ForeignKeys[0].RefTable = EventsTable
	UniswapV3decreaseLiquditiesTable.ForeignKeys[0].RefTable = EventsTable
	UniswapV3increaseLiquditiesTable.ForeignKeys[0].RefTable = EventsTable
	UniswapV3poolBurnsTable.ForeignKeys[0].RefTable = EventsTable
	UniswapV3poolCreatedsTable.ForeignKeys[0].RefTable = EventsTable
	UniswapV3poolFlashesTable.ForeignKeys[0].RefTable = EventsTable
	UniswapV3poolInitializesTable.ForeignKeys[0].RefTable = EventsTable
	UniswapV3poolMintsTable.ForeignKeys[0].RefTable = EventsTable
	UniswapV3poolSwapsTable.ForeignKeys[0].RefTable = EventsTable
	UniswapV3transfersTable.ForeignKeys[0].RefTable = EventsTable
}
