// Code generated by entc, DO NOT EDIT.

package event

const (
	// Label holds the string label denoting the event type in the database.
	Label = "event"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldSignature holds the string denoting the signature field in the database.
	FieldSignature = "signature"
	// FieldAddress holds the string denoting the address field in the database.
	FieldAddress = "address"
	// FieldBlockNumber holds the string denoting the block_number field in the database.
	FieldBlockNumber = "block_number"
	// FieldTxHash holds the string denoting the tx_hash field in the database.
	FieldTxHash = "tx_hash"
	// FieldTxIndex holds the string denoting the tx_index field in the database.
	FieldTxIndex = "tx_index"
	// FieldBlockHash holds the string denoting the block_hash field in the database.
	FieldBlockHash = "block_hash"
	// FieldIndex holds the string denoting the index field in the database.
	FieldIndex = "index"
	// FieldHash holds the string denoting the hash field in the database.
	FieldHash = "hash"
	// EdgeIncreaseLiquidity holds the string denoting the increase_liquidity edge name in mutations.
	EdgeIncreaseLiquidity = "increase_liquidity"
	// EdgeDecreaseLiquidity holds the string denoting the decrease_liquidity edge name in mutations.
	EdgeDecreaseLiquidity = "decrease_liquidity"
	// EdgeCollect holds the string denoting the collect edge name in mutations.
	EdgeCollect = "collect"
	// EdgeTransfer holds the string denoting the transfer edge name in mutations.
	EdgeTransfer = "transfer"
	// EdgePoolCreated holds the string denoting the pool_created edge name in mutations.
	EdgePoolCreated = "pool_created"
	// Table holds the table name of the event in the database.
	Table = "events"
	// IncreaseLiquidityTable is the table that holds the increase_liquidity relation/edge.
	IncreaseLiquidityTable = "uniswap_v3increase_liqudities"
	// IncreaseLiquidityInverseTable is the table name for the UniswapV3IncreaseLiqudity entity.
	// It exists in this package in order to avoid circular dependency with the "uniswapv3increaseliqudity" package.
	IncreaseLiquidityInverseTable = "uniswap_v3increase_liqudities"
	// IncreaseLiquidityColumn is the table column denoting the increase_liquidity relation/edge.
	IncreaseLiquidityColumn = "event_increase_liquidity"
	// DecreaseLiquidityTable is the table that holds the decrease_liquidity relation/edge.
	DecreaseLiquidityTable = "uniswap_v3decrease_liqudities"
	// DecreaseLiquidityInverseTable is the table name for the UniswapV3DecreaseLiqudity entity.
	// It exists in this package in order to avoid circular dependency with the "uniswapv3decreaseliqudity" package.
	DecreaseLiquidityInverseTable = "uniswap_v3decrease_liqudities"
	// DecreaseLiquidityColumn is the table column denoting the decrease_liquidity relation/edge.
	DecreaseLiquidityColumn = "event_decrease_liquidity"
	// CollectTable is the table that holds the collect relation/edge.
	CollectTable = "uniswap_v3collects"
	// CollectInverseTable is the table name for the UniswapV3Collect entity.
	// It exists in this package in order to avoid circular dependency with the "uniswapv3collect" package.
	CollectInverseTable = "uniswap_v3collects"
	// CollectColumn is the table column denoting the collect relation/edge.
	CollectColumn = "event_collect"
	// TransferTable is the table that holds the transfer relation/edge.
	TransferTable = "uniswap_v3transfers"
	// TransferInverseTable is the table name for the UniswapV3Transfer entity.
	// It exists in this package in order to avoid circular dependency with the "uniswapv3transfer" package.
	TransferInverseTable = "uniswap_v3transfers"
	// TransferColumn is the table column denoting the transfer relation/edge.
	TransferColumn = "event_transfer"
	// PoolCreatedTable is the table that holds the pool_created relation/edge.
	PoolCreatedTable = "uniswap_v3pool_createds"
	// PoolCreatedInverseTable is the table name for the UniswapV3PoolCreated entity.
	// It exists in this package in order to avoid circular dependency with the "uniswapv3poolcreated" package.
	PoolCreatedInverseTable = "uniswap_v3pool_createds"
	// PoolCreatedColumn is the table column denoting the pool_created relation/edge.
	PoolCreatedColumn = "event_pool_created"
)

// Columns holds all SQL columns for event fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldSignature,
	FieldAddress,
	FieldBlockNumber,
	FieldTxHash,
	FieldTxIndex,
	FieldBlockHash,
	FieldIndex,
	FieldHash,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// SignatureValidator is a validator for the "signature" field. It is called by the builders before save.
	SignatureValidator func(string) error
	// AddressValidator is a validator for the "address" field. It is called by the builders before save.
	AddressValidator func(string) error
	// TxHashValidator is a validator for the "tx_hash" field. It is called by the builders before save.
	TxHashValidator func(string) error
	// BlockHashValidator is a validator for the "block_hash" field. It is called by the builders before save.
	BlockHashValidator func(string) error
	// HashValidator is a validator for the "hash" field. It is called by the builders before save.
	HashValidator func(string) error
)
